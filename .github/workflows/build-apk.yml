name: Build Android APK

on:
  push:
    branches: [ main ]  # 当 main 分支有代码推送时触发
  pull_request:
    branches: [ main ]  # 当有 PR 合并到 main 分支时触发
  workflow_dispatch:  # 允许手动触发工作流

jobs:
  build:
    runs-on: ubuntu-latest  # 使用 Ubuntu 系统的虚拟环境

    steps:
      - name: 拉取代码
        uses: actions/checkout@v4  # 拉取当前仓库代码到虚拟环境

      - name: 设置 JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'  # 使用 Temurin JDK（兼容 Android 开发）
          cache: gradle  # 缓存 Gradle 依赖，加速构建

      - name: 授予 Gradle 执行权限
        run: chmod +x ./gradlew  # 确保 gradlew 可执行（关键步骤）

      - name: 构建调试版 APK
        run: ./gradlew assembleDebug  # 执行 Gradle 命令生成调试版 APK

      - name: 上传 APK 产物
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk  # 产物名称
          path: app/build/outputs/apk/debug/app-debug.apk  # APK 生成路径（根据项目结构调整）
